{"version":3,"sources":["resources/generator.js","components/controls.jsx","components/messages.jsx","App.js","Recents.js","Root.js","index.js"],"names":["fillBoard","darkMode","ctx","canvas","square","width","lineWidth","lineCap","rank","file","fillStyle","squareColors","dark","darkSquare","normal","fillRect","lightSquare","drawPath","whiteColor","blackColor","from","to","color","beginPath","strokeStyle","moveTo","x","y","lineTo","stroke","files","a","b","c","d","e","f","g","h","module","exports","updateBoard","chess","highlightLastMove","clearRect","height","history","verbose","moves","forEach","move","fromTo","addTo","push","concat","i","fromFile","fromRank","parseInt","fromFileNum","fromCoords","toFile","toRank","toFileNum","toCoords","length","arc","Math","PI","Controls","state","saveToServer","props","badInput","undefined","pgn","error","document","querySelector","disabled","body","req","XMLHttpRequest","open","setRequestHeader","onload","readyState","status","response","JSON","parse","console","log","handleOtherChange","id","localSetter","warn","send","stringify","className","cols","rows","placeholder","onChange","handlePGN","target","value","htmlFor","this","type","defaultChecked","checked","onClick","Component","Messages","copyToClipboard","window","navigator","clipboard","url","fetchedID","writeText","then","success","href","App","Chess","componentDidMount","getContext","generator","path","location","pathname","slice","localViewed","localGetter","localCreated","loadGame","setState","fetchingGame","fetchFromServer","json","err","load_pgn","sloppy","headers","header","fetchedGame","white","White","black","Black","result","Result","fetch","res","catch","callback","message","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","local","localStorage","getItem","filter","obj","setItem","src","alt","style","transform","flipped","map","elem","ceil","Recents","cardTemplate","game","description","viewed","created","Root","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.df2ede28.chunk.js","sourcesContent":["const fillBoard = (darkMode,ctx,canvas) => {\r\n\r\n    const square = canvas.width/8;\r\n    ctx.lineWidth = square*0.065;\r\n    ctx.lineCap = \"round\";\r\n\r\n    let rank = 1;\r\n    while(rank < 9) {\r\n        let file = 0;\r\n        while(file < 8) {\r\n            if(rank % 2 !== 0) {\r\n                if(file % 2 === 0) {\r\n                    ctx.fillStyle = darkMode ? squareColors.dark.darkSquare : squareColors.normal.darkSquare;\r\n                    ctx.fillRect(file*square,canvas.width-(square*rank),square,square);\r\n                } else {\r\n                    ctx.fillStyle = darkMode ? squareColors.dark.lightSquare : squareColors.normal.lightSquare;\r\n                    ctx.fillRect(file*square,canvas.width-(square*rank),square,square);\r\n                }\r\n            } else {\r\n                if(file % 2 !== 0) {\r\n                    ctx.fillStyle = darkMode ? squareColors.dark.darkSquare : squareColors.normal.darkSquare;\r\n                    ctx.fillRect(file*square,canvas.width-(square*rank),square,square);\r\n                } else {\r\n                    ctx.fillStyle = darkMode ? squareColors.dark.lightSquare : squareColors.normal.lightSquare;\r\n                    ctx.fillRect(file*square,canvas.width-(square*rank),square,square);\r\n                }\r\n            }\r\n            file++;\r\n        }\r\n        rank++;\r\n    }\r\n}\r\n\r\nconst updateBoard = (ctx,chess,canvas,whiteColor,blackColor,darkMode,highlightLastMove) => {\r\n    ctx.clearRect(0,0,canvas.width,canvas.height);\r\n    fillBoard(darkMode,ctx,canvas);\r\n    \r\n    const history = chess.history({verbose:true});\r\n  \r\n    let moves = [];\r\n  \r\n    history.forEach(move => {\r\n      let fromTo = {\r\n          from: move.from,\r\n          to: move.to,\r\n          color: move.color\r\n      }\r\n      let addTo = [];\r\n      addTo.push(fromTo);\r\n  \r\n      moves = moves.concat(addTo);\r\n  \r\n    });\r\n    \r\n    const square = canvas.width/8;\r\n\r\n    moves.forEach((move,i) => {\r\n\r\n        let from = move.from;\r\n        let to = move.to;\r\n        \r\n        let fromFile = from[0];\r\n        let fromRank = parseInt(from[1])-1;\r\n        let fromFileNum = files[fromFile];\r\n        \r\n        let fromCoords = {\r\n            x: (square/2)+(square*fromFileNum),\r\n            y: canvas.width-square/2 - (square*fromRank)\r\n        }\r\n  \r\n        let toFile = to[0];\r\n        let toRank = parseInt(to[1])-1;\r\n        let toFileNum = files[toFile];\r\n  \r\n        let toCoords = {\r\n            x: (square/2)+(square*toFileNum),\r\n            y: canvas.width-(square/2) - (square*toRank)\r\n        };\r\n        \r\n        drawPath(ctx,whiteColor,blackColor,fromCoords,toCoords,move.color);\r\n  \r\n        if(i === moves.length-1 && highlightLastMove) {\r\n          ctx.beginPath();\r\n          ctx.arc(toCoords.x,toCoords.y,square/8,0,2*Math.PI);\r\n          ctx.stroke();\r\n        }\r\n    });\r\n    \r\n}\r\n\r\nconst drawPath = (ctx,whiteColor,blackColor,from,to,color) => {\r\n\r\n    ctx.beginPath();\r\n    ctx.strokeStyle = (color === 'w' ? whiteColor : blackColor);\r\n    ctx.moveTo(from.x,from.y);\r\n    ctx.lineTo(to.x,to.y);\r\n    ctx.stroke();\r\n\r\n}\r\n\r\n\r\nconst files = {\r\n    a:0,\r\n    b:1,\r\n    c:2,\r\n    d:3,\r\n    e:4,\r\n    f:5,\r\n    g:6,\r\n    h:7\r\n}\r\n\r\nconst squareColors = {\r\n    normal: {\r\n      darkSquare: \"#adadad\",\r\n      lightSquare: \"#eee\"\r\n    },\r\n    dark: {\r\n      darkSquare: \"#000\",\r\n      lightSquare: \"#4a4a4a\"\r\n    }\r\n}\r\n\r\nmodule.exports.updateBoard = updateBoard;\r\nmodule.exports.fillBoard = fillBoard;","import React, { Component } from 'react';\r\n\r\nclass Controls extends Component {\r\n    state = {  }\r\n    render() { \r\n        return (\r\n            <div className=\"controls\">\r\n                <textarea id=\"importGame\" cols=\"30\" rows=\"10\" placeholder=\"Input PGN\"\r\n                            onChange={(e) => {this.props.handlePGN(e.target.value)}}\r\n                        ></textarea>\r\n                <div className=\"row\">\r\n                    <label htmlFor=\"whiteColor\">\r\n                    White Color\r\n                    <input value={this.props.whiteColor} type=\"color\" onChange={(e) => {this.props.handleOtherChange(e.target.value,'whiteColor')}}></input>\r\n                    </label>\r\n                    <label htmlFor=\"blackColor\">\r\n                    Black color\r\n                    <input value={this.props.blackColor} type=\"color\" onChange={(e) => {this.props.handleOtherChange(e.target.value,'blackColor')}}></input>\r\n                    </label>\r\n                    <label className=\"full\">\r\n                    Dark mode?\r\n                    <label className=\"switch\">\r\n                        <input type=\"checkbox\" defaultChecked={this.props.darkMode} onChange={(e) => {this.props.handleOtherChange(e.target.checked,'darkMode')}} />\r\n                        <span className=\"slider round\"></span>\r\n                    </label>\r\n                    </label>\r\n                    <label className=\"full\">\r\n                    Highlight Last move?\r\n                    <label className=\"switch\">\r\n                        <input type=\"checkbox\" defaultChecked={this.props.highlightLastMove} onChange={(e) => {this.props.handleOtherChange(e.target.checked,'highlightLastMove')}} />\r\n                        <span className=\"slider round\"></span>\r\n                    </label>\r\n                    </label>\r\n                </div>\r\n                <div>\r\n                    <button className=\"saveButton\" onClick={this.saveToServer}>\r\n                        Save design!\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    saveToServer = () => {\r\n        if(this.props.badInput || this.props.pgn === undefined) {\r\n            return this.props.error(\"There was a problem with your PGN. Please try again.\");\r\n        }\r\n        \r\n        let saveButton = document.querySelector('.saveButton');\r\n        saveButton.disabled = true;\r\n        const pgn = this.props.chess.pgn();\r\n        const whiteColor = this.props.whiteColor;\r\n        const blackColor = this.props.blackColor;\r\n        const darkMode = this.props.darkMode ? 1 : 0;\r\n        const highlightLastMove = this.props.highlightLastMove ? 1 : 0;\r\n    \r\n        let body = {\r\n          pgn: pgn,\r\n          whiteColor: whiteColor,\r\n          blackColor: blackColor,\r\n          darkMode: darkMode,\r\n          highlightLastMove: highlightLastMove\r\n        }\r\n        \r\n        const url = 'https://nf6.io/add';\r\n    \r\n        const req = new XMLHttpRequest();\r\n    \r\n        req.open('POST',url,true);\r\n        req.setRequestHeader('Content-Type', 'application/json');\r\n    \r\n        req.onload = () => {\r\n          if(req.readyState === 4) {\r\n            if(req.status === 200) {\r\n              let response = JSON.parse(req.response)\r\n              console.log(response);\r\n              this.props.handleOtherChange(response.id,'fetchedID');\r\n              this.props.localSetter(response,'created');\r\n            } else {\r\n              console.warn(`There be errors about here`);\r\n            }\r\n          }\r\n        }\r\n\r\n        req.send(JSON.stringify(body));\r\n    }\r\n}\r\n \r\nexport default Controls;","import React, { Component } from 'react';\r\n\r\nclass Messages extends Component {\r\n    state = {  }\r\n    render() { \r\n        return (\r\n        <div className=\"messageContainer\">\r\n            {!this.props.fetchedID && (\r\n                <div className=\"message warn\">\r\n                <span className=\"material-icons\">warning</span>\r\n                <p>\r\n                    Once you press save, you'll be given a unique URL and won't be able to change your design. <strong>Copy your URL before closing the page! </strong>\r\n                    Go to <a href=\"https://nf6.io/recents\">https://nf6.io/recents</a> to see your recently viewed and created games.\r\n                </p>\r\n                </div>\r\n            )}\r\n            {this.props.fetchedID && (\r\n                <div className=\"message success\">\r\n                    <p>\r\n                    https://nf6.io/{this.props.fetchedID}\r\n                    <button onClick={this.copyToClipboard}>\r\n                        <span className=\"material-icons\">content_copy</span>\r\n                    </button>\r\n                    </p>  \r\n                </div>\r\n            )}\r\n        </div>\r\n        );\r\n    }\r\n\r\n    copyToClipboard = () => {\r\n        if(window.navigator.clipboard){\r\n            const baseurl = \"https://nf6.io/\";\r\n            const url = (baseurl+this.props.fetchedID);\r\n            window.navigator.clipboard.writeText(url).then(() => { // success\r\n                console.log(`Wrote to clipboard: ${url}`);\r\n                this.props.success(\"Copied URL to clipboard!\")\r\n            }, () => { // failure\r\n                this.props.error(\"Failed to copy to clipboard. Please try manually copying the URL!\");\r\n            });\r\n        }\r\n    }\r\n}\r\n \r\nexport default Messages;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Chess from 'chess.js';\r\nimport Controls from './components/controls';\r\nimport Messages from './components/messages';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport generator from './resources/generator' ;\r\n\r\nclass App extends Component {\r\n  state = {\r\n    darkMode: false,\r\n    whiteColor: \"#81ebfd\",\r\n    blackColor: \"#d24b4b\",\r\n    highlightLastMove: true\r\n\r\n  }\r\n\r\n  render() { \r\n    return (\r\n      <>\r\n        <header>\r\n          <a href=\"/\">\r\n            <img className=\"logo\" src={'./images/Nf6io-logo-final.png'} alt=\"Nf6.io Logo\" />\r\n          </a>\r\n        </header>\r\n        <div className=\"container\">\r\n          <div className=\"wrapper\">\r\n            {this.state.fetchedGame && this.state.white && this.state.black &&\r\n              <h1>\r\n                {this.state.white} vs {this.state.black}\r\n                {this.state.result && <span className='score'>{\" \" + this.state.result}</span>}\r\n              </h1>\r\n            }\r\n            <p id=\"date\"></p>\r\n            <canvas width=\"560\" height=\"560\"\r\n              style={{\r\n                transform: this.state.flipped ? \"rotate(180deg)\" : \"\"\r\n              }}\r\n            ></canvas>\r\n            \r\n            {this.state.fetchedGame &&\r\n            <p id=\"pgn\">{this.chess.history().map((elem,i) => {\r\n              if(i%2 === 0) {\r\n                return <><b>{Math.ceil(i/2)+1 + \". \"}</b><>{elem + \" \"}</></>;\r\n              } else {\r\n                return <>{elem + \" \"}</>;\r\n              }\r\n            })}</p>}\r\n\r\n            {(!this.state.fetchedGame && !this.state.fetchingGame) &&\r\n            <Controls\r\n              chess={this.chess}\r\n              handlePGN={this.handlePGN}\r\n              handleOtherChange={this.handleOtherChange}\r\n              fetchedID={this.state.fetchedID}\r\n              pgn={this.state.pgn}\r\n              whiteColor={this.state.whiteColor}\r\n              blackColor={this.state.blackColor}\r\n              darkMode={this.state.darkMode}\r\n              highlightLastMove={this.state.highlightLastMove}\r\n              localSetter={this.localSetter}\r\n              success={this.success}\r\n              error={this.error}\r\n              badInput={this.state.badInput}\r\n            />}\r\n            {(!this.state.fetchedGame && !this.state.fetchingGame) && (\r\n              <Messages\r\n                fetchedID={this.state.fetchedID}\r\n                success={this.success}\r\n                error={this.error}\r\n              />\r\n            )}\r\n            <ToastContainer />\r\n          </div>\r\n        </div>\r\n      </>\r\n      \r\n    );\r\n  }\r\n\r\n  chess = new Chess();\r\n\r\n  files = {\r\n    a:0,\r\n    b:1,\r\n    c:2,\r\n    d:3,\r\n    e:4,\r\n    f:5,\r\n    g:6,\r\n    h:7\r\n}\r\n\r\nsquareColors = {\r\n  normal: {\r\n    darkSquare: \"#888\",\r\n    lightSquare: \"#eee\"\r\n  },\r\n  dark: {\r\n    darkSquare: \"#000\",\r\n    lightSquare: \"#4a4a4a\"\r\n  }\r\n}\r\n\r\n  componentDidMount = () => {\r\n    this.canvas = document.querySelector('canvas');\r\n    this.ctx = this.canvas.getContext('2d');\r\n\r\n    this.square = this.canvas.width/8;\r\n    this.ctx.lineWidth = this.square*0.065;\r\n    this.ctx.lineCap = \"round\";\r\n\r\n    generator.fillBoard(this.state.darkMode,this.ctx,this.canvas);\r\n\r\n    document.chess = this.chess;\r\n\r\n    const path = window.location.pathname.slice(1);\r\n    if(path) {\r\n      let localViewed = this.localGetter(path,'viewed')[0];\r\n      let localCreated = this.localGetter(path,'created')[0];\r\n      if(localViewed || localCreated) {\r\n        console.log(\"Found local game!\");\r\n        this.loadGame(localViewed ? localViewed : localCreated);\r\n        return localViewed ? localViewed : localCreated;\r\n      } else {\r\n        console.log('fetching');\r\n        this.setState({\r\n          fetchingGame: true\r\n        },() => {\r\n          this.fetchFromServer(path);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  loadGame = (json) => {\r\n    if(json.err) {\r\n      return this.error(\"Couldn't find a game with that ID!\");\r\n    }\r\n    console.log(json);\r\n    this.chess.load_pgn(json.pgn,{sloppy:true});\r\n    let headers = this.chess.header();\r\n    this.setState({\r\n    fetchedGame: json,\r\n    blackColor: json.blackColor,\r\n    whiteColor: json.whiteColor,\r\n    pgn: json.pgn,\r\n    white: headers.White,\r\n    black: headers.Black,\r\n    result: headers.Result,\r\n    darkMode: json.darkMode,\r\n    highlightLastMove: json.highlightLastMove,\r\n    fetchingGame: false,\r\n    }, () => {\r\n      generator.updateBoard(this.ctx,this.chess,this.canvas,this.state.whiteColor,this.state.blackColor,this.state.darkMode,this.state.highlightLastMove);\r\n      console.log('test');\r\n      if(!this.localGetter(json.id,'viewed')[0]) {\r\n        console.log('test');\r\n        this.localSetter(json,'viewed');\r\n      }\r\n    });\r\n  }\r\n//\r\n  fetchFromServer = (path) => {\r\n    fetch('https://nf6.io/game/'+path)\r\n    .then(res => res.json())\r\n    .then(json => this.loadGame(json))\r\n    .catch(err => {\r\n      this.error(\"Couldn't find a game with that ID!\");\r\n    });\r\n  }\r\n\r\nhandlePGN = (value) => {\r\n    const res = this.chess.load_pgn(value,{sloppy:true});\r\n\r\n    if(res) {\r\n      this.setState({\r\n        pgn: value,\r\n        badInput: false,\r\n      }, () => {\r\n        generator.updateBoard(this.ctx,this.chess,this.canvas,this.state.whiteColor,this.state.blackColor,this.state.darkMode,this.state.highlightLastMove);\r\n      });\r\n    } else {\r\n      this.setState({\r\n        badInput: true\r\n      });\r\n    }\r\n  }\r\n\r\n  handleOtherChange = (value,target,callback=null) => {\r\n    this.setState({\r\n      [target]: value\r\n    }, () => {\r\n      if(callback) {\r\n        callback();\r\n      }\r\n      generator.updateBoard(this.ctx,this.chess,this.canvas,this.state.whiteColor,this.state.blackColor,this.state.darkMode,this.state.highlightLastMove);\r\n    });\r\n  }\r\n\r\n  error = (message) => {\r\n    toast.error(message, {\r\n      position: \"bottom-center\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  }\r\n\r\n  success = (message) => {\r\n    toast.success(message, {\r\n      position: \"bottom-center\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  }\r\n\r\n  localGetter = (id,target) => {\r\n    const local = JSON.parse(window.localStorage.getItem(target));\r\n    if(local) {\r\n      return local.filter(obj => obj.id === id);\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  localSetter = (obj,target) => {\r\n    if(window.localStorage.getItem(target) === null) {\r\n      window.localStorage.setItem(target,'[]');\r\n    }\r\n\r\n    let local = JSON.parse(window.localStorage.getItem(target));\r\n    local.push(obj);\r\n    window.localStorage.setItem(target,JSON.stringify(local));\r\n\r\n    console.log(`Added ${obj.id} to local storage: ${target}`);\r\n  }\r\n\r\n}\r\n \r\nexport default App;\r\n\r\n/** The Reacty Way\r\n * Accept PGN input and load it into this.chess, then this.state.pgn to value\r\n * In callback, call this.drawLines(), which should operate agnostic to input so you can call it whenever ANYTHING changes (colors or PGN).\r\n * \r\n * Sample \r\n */","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Chess from 'chess.js';\r\nimport generator from './resources/generator';\r\n\r\n\r\nclass Recents extends Component {\r\n    state = {  }\r\n    render() { \r\n        return (\r\n            <div className=\"recents\">\r\n                <h1>Recent Games</h1>\r\n                <h2>Recently viewed</h2>\r\n                <div className=\"cardContainer\">\r\n                    {this.state.viewed && JSON.parse(this.state.viewed).map(game => this.cardTemplate(game))}\r\n                </div>\r\n                <h2>Recently created</h2>\r\n                <div className=\"cardContainer\">\r\n                    {this.state.created && JSON.parse(this.state.created).map(game => this.cardTemplate(game))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    cardTemplate = (game) => {\r\n        const chess = new Chess();\r\n        chess.load_pgn(game.pgn);\r\n        const headers = chess.header();\r\n        let description = 'An artsy diagram based on a game of chess!';\r\n        if(headers.White && headers.Black) {\r\n            description = `An artsy chess diagram based on a game between ${headers.White} and ${headers.Black}`;\r\n        }\r\n\r\n        return (\r\n            <div className=\"card\" key={game.id}>\r\n                <a href={\"https://nf6.io/\" + game.id}>\r\n                <h3>{`${(headers.White && headers.Black ? `${headers.White} vs ${headers.Black}` : `No title`)}`}</h3>\r\n                <img src={\"https://nf6.io/image/\" + game.id + \"/300\"} alt={description} />\r\n                </a>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let localViewed = window.localStorage.getItem('viewed');\r\n        let localCreated = window.localStorage.getItem('created');\r\n\r\n        this.setState({\r\n            viewed: localViewed,\r\n            created: localCreated\r\n        });\r\n    }\r\n}\r\n \r\nexport default Recents;","import React, { Component } from 'react';\r\nimport App from './App';\r\nimport Recents from './Recents';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nclass Root extends Component {\r\n    state = {  }\r\n    render() { \r\n        return (\r\n            <Router>\r\n                <Switch>\r\n                    <Route exact path=\"/recents\">\r\n                        <Recents key=\"recents\" />\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <App key=\"app\" />\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Root;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Root from './Root';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}